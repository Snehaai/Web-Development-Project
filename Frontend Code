<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mindful Moments</title>
  <style>
    body { font-family: sans-serif; background: #f8f9fa; margin: 0; padding: 20px; }
    .container { max-width: 800px; margin: 0 auto; }
    .main-title { font-size: 24px; font-weight: bold; margin-bottom: 10px; }
    .subtitle { color: #666; margin-bottom: 20px; }
    .mood-selector { display: flex; gap: 10px; margin-bottom: 20px; }
    .mood-emoji { font-size: 28px; cursor: pointer; padding: 10px; border-radius: 50%; border: 2px solid transparent; background: #fff; }
    .mood-emoji.selected { border-color: #007bff; background: #e3f2fd; }
    .journal-input { background: white; border-radius: 8px; padding: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); margin-bottom: 30px; }
    .journal-textarea { width: 100%; min-height: 100px; border: none; font-size: 16px; outline: none; }
    .save-btn { background: #333; color: white; padding: 10px 20px; border: none; border-radius: 6px; float: right; }
    .entry-item { background: #fff; padding: 15px; margin-bottom: 10px; border-radius: 6px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); display: flex; justify-content: space-between; }
    .entry-content { flex: 1; }
    .entry-date { font-weight: bold; margin-bottom: 5px; }
    .edit-btn, .delete-btn { margin-left: 10px; border: none; border-radius: 4px; padding: 4px 8px; cursor: pointer; font-size: 12px; }
    .edit-btn { background: #ffc107; }
    .delete-btn { background: #dc3545; color: white; }
    .mood-trends { background: #fff; border-radius: 8px; padding: 20px; margin-top: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
    .trend-average { font-size: 20px; font-weight: bold; }
    .trend-change { font-size: 14px; margin-top: 5px; }
  </style>
</head>
<body>
<div class="container">
  <h1 class="main-title">How are you feeling today?</h1>
  <p class="subtitle">Choose an emoji that best represents your mood.</p>

  <!-- Mood Selector -->
  <div class="mood-selector">
    <div class="mood-emoji" data-mood="1">😢</div>
    <div class="mood-emoji" data-mood="2">😟</div>
    <div class="mood-emoji" data-mood="3">😐</div>
    <div class="mood-emoji" data-mood="4">🙂</div>
    <div class="mood-emoji" data-mood="5">😊</div>
  </div>

  <!-- Journal Input -->
  <div class="journal-input">
    <textarea class="journal-textarea" id="journalText" placeholder="Write about your day..."></textarea>
    <button class="save-btn" id="saveBtn">Save Entry</button>
    <div style="clear:both"></div>
  </div>

  <!-- Past Entries -->
  <h2>Past Entries</h2>
  <div id="entriesContainer"></div>

  <!-- Mood Trends -->
  <div class="mood-trends">
    <h2>Mood Trends</h2>
    <div class="trend-average">Average Mood: <span id="averageMood">-</span></div>
    <div class="trend-change" id="trendChange">Last 7 Days: -</div>
  </div>
</div>

<script>
const API_BASE = window.location.hostname === "localhost" ? "http://localhost:5000/api" : "/api";

let selectedMood = null;
let editingId = null;
let entries = [];

// Setup
document.addEventListener("DOMContentLoaded", () => {
  setupEventListeners();
  loadEntries();
  loadAnalytics();
});

function setupEventListeners() {
  document.querySelectorAll(".mood-emoji").forEach(e => {
    e.addEventListener("click", () => selectMood(e.dataset.mood));
  });
  document.getElementById("saveBtn").addEventListener("click", saveEntry);
}

// Mood
function selectMood(mood) {
  document.querySelectorAll(".mood-emoji").forEach(e => e.classList.remove("selected"));
  document.querySelector(`.mood-emoji[data-mood="${mood}"]`).classList.add("selected");
  selectedMood = parseInt(mood);
}

// CRUD
async function loadEntries() {
  const res = await fetch(`${API_BASE}/entries`);
  entries = await res.json();
  displayEntries();
}

async function saveEntry() {
  const text = document.getElementById("journalText").value.trim();
  if (!text || !selectedMood) return alert("Please write and pick a mood!");

  const entry = { text, mood: selectedMood };
  let res;

  if (editingId) {
    res = await fetch(`${API_BASE}/entries/${editingId}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(entry)
    });
    editingId = null;
    document.getElementById("saveBtn").textContent = "Save Entry";
  } else {
    res = await fetch(`${API_BASE}/entries`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(entry)
    });
  }
  document.getElementById("journalText").value = "";
  selectedMood = null;
  document.querySelectorAll(".mood-emoji").forEach(e => e.classList.remove("selected"));
  await loadEntries();
  await loadAnalytics();
}

function displayEntries() {
  const container = document.getElementById("entriesContainer");
  if (!entries.length) {
    container.innerHTML = "<p>No entries yet.</p>";
    return;
  }
  container.innerHTML = entries.map(e => `
    <div class="entry-item">
      <div class="entry-content">
        <div class="entry-date">${new Date(e.createdAt).toLocaleDateString()}</div>
        <div class="entry-text">${e.text}</div>
      </div>
      <div>${getMoodEmoji(e.mood)}</div>
      <div>
        <button class="edit-btn" onclick="editEntry('${e._id}')">Edit</button>
        <button class="delete-btn" onclick="deleteEntry('${e._id}')">Delete</button>
      </div>
    </div>`).join("");
}

async function deleteEntry(id) {
  if (!confirm("Delete this entry?")) return;
  await fetch(`${API_BASE}/entries/${id}`, { method: "DELETE" });
  await loadEntries();
  await loadAnalytics();
}

function editEntry(id) {
  const e = entries.find(en => en._id === id);
  if (!e) return;
  document.getElementById("journalText").value = e.text;
  selectMood(e.mood);
  editingId = id;
  document.getElementById("saveBtn").textContent = "Update Entry";
}

// Trends
async function loadAnalytics() {
  const res = await fetch(`${API_BASE}/entries/analytics`);
  const data = await res.json();
  document.getElementById("averageMood").textContent = data.average?.toFixed(1) || "-";
  document.getElementById("trendChange").textContent = `Last 7 Days: ${data.change || "-"}`;
}

function getMoodEmoji(mood) {
  return ["","😢","😟","😐","🙂","😊"][mood] || "😐";
}
</script>
</body>
</html>
